#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Oct 14 11:14:30 2018

@author: spencerthomasbyers
"""

#This code will simulate the HH neuronal spike model and plot the firing rate 
#over an array of input currents, using the detect_peaks toolbox from
#https://github.com/MonsieurV/py-findpeaks#detect_peaks-from-marcos-duarte repository.


#import modules
 
import numpy as np
import matplotlib.pyplot as plt
from detect_peaks import detect_peaks
from scipy.signal import savgol_filter

#Import functions needed to run HH simulation

from HH_functions import HH

#Initialize variables for T0 (.5 sec) of I0
I0 = 19
T0 = 500

#Run the HH function [V,m,h,n,t] = HH(I0, T0) which is saying return values of V,m,h,n,t using the HH function and these two variables

[V,m,h,n,t] = HH(I0, T0)

#Plot figure of voltage over time in black

plt.figure()
plt.plot(t,V, 'k')
plt.xlabel('Time [ms]')
plt.ylabel('Voltage [mV]')

#Create an array of input currents from 0-99 amps with steps of 0.5 amps

IRange = np.arange(0,100,0.5)

#Create an array for firing rates of each input current to index into 

FRateArray = []

for i in range (0, len(IRange)):
    I0 = IRange[i]  #Set loops input current as the first current
    [V,m,h,n,t] = HH(I0,T0)
    V = np.reshape(V,-1)    #Reshape voltage vector so it is no longer an array of arrays but an array of floats and with one row and many columns
    indexes = detect_peaks(V, mph = -30 , mpd = 5)  #Index number of peaks generated by a single input current, mph = -30 is height minimum for peak count, mpd = 5 is minimum distance between peak threshold
    FRate = indexes.shape[0]    #Store number of peaks detected in an FRate variable, not where they were
    FRateArray = FRateArray + [FRate*2] #Index those FRates(*2 bc/ set from T0 of 500 ms and trying to get Hz as final unit of firing rate)
    
#Red line smoothing curve from the Savgol_filter   
    
yFRateHat1 = savgol_filter(FRateArray, 45, 4)   #45 is window, 4 is the polynomial order
            
#Plot Figure...

plt.figure(figsize=(15,7.5))
plt.plot(IRange, FRateArray, lw = 4)
plt.plot(IRange, yFRateHat1, 'r')
plt.xlabel('Input Current [Amps]')
plt.ylabel('Firing Rate [Hz]')
plt.title('FI curve for HH model')

            
    
    
    
    
    
    


















    
    
    